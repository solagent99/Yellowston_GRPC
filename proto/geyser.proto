syntax = "proto3";

package geyser;

service Geyser {
  rpc Subscribe(SubscribeRequest) returns (stream SubscribeUpdate) {}
}

message SubscribeRequest {
  SubscribeRequestSlots slots = 1;
  repeated SubscribeRequestAccounts accounts = 2;
}

message SubscribeRequestSlots {
  bool enabled = 1;
}

message SubscribeRequestAccounts {
  string filter = 1;
  repeated string account = 2;
  repeated string owner = 3;
}

message SubscribeUpdate {
  oneof update_oneof {
    SubscribeUpdateAccount account = 1;
    SubscribeUpdateSlot slot = 2;
  }
}

message SubscribeUpdateAccount {
  repeated string filters = 1;
  SubscribeUpdateAccountInfo account = 2;
  uint64 slot = 3;
  bool is_startup = 4;
}

message SubscribeUpdateAccountInfo {
  bytes pubkey = 1;
  uint64 lamports = 2;
  bytes owner = 3;
  bool executable = 4;
  uint64 rent_epoch = 5;
  bytes data = 6;
  uint64 write_version = 7;
  optional bytes txn_signature = 8;
}

message SubscribeUpdateSlot {
  uint64 slot = 1;
  optional uint64 parent = 2;
  SubscribeUpdateSlotStatus status = 3;
}

enum SubscribeUpdateSlotStatus {
  PROCESSED = 0;
  ROOTED = 1;
  CONFIRMED = 2;
}
